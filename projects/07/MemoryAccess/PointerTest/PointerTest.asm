@256
D=A
@SP
M=D
@3030
D=A
@SP
A=M
M=D
@SP
M=M+1
// POP value from stack to POINTER
@SP
M=M-1
A=M
D=M
@3
M=D
@3040
D=A
@SP
A=M
M=D
@SP
M=M+1
// POP value from stack to POINTER
@SP
M=M-1
A=M
D=M
@3
A=A+1
M=D
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
// POP value from stack to THIS
@SP
M=M-1
A=M
D=M
@THIS
A=M
A=A+1
A=A+1
M=D
@46
D=A
@SP
A=M
M=D
@SP
M=M+1
// POP value from stack to THAT
@SP
M=M-1
A=M
D=M
@THAT
A=M
A=A+1
A=A+1
A=A+1
A=A+1
A=A+1
A=A+1
M=D
// PUSH value from POINTER to stack
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// PUSH value from POINTER to stack
@3
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// math operation with operator: add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M+D
@SP
M=M+1
// PUSH value from THIS to stack
@THIS
A=M
A=A+1
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// math operation with operator: sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// PUSH value from THAT to stack
@THAT
A=M
A=A+1
A=A+1
A=A+1
A=A+1
A=A+1
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// math operation with operator: add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M+D
@SP
M=M+1
(INFINITE_LOOP)
@INFINITE_LOOP
0;JMP